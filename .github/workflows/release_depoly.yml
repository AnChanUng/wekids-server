name: wekids Release CI/CD

on:
  pull_request:
    types: [closed]
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: release-wekids-depoly
  CODE_DEPLOY_APPLICATION_NAME: release-wekids
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: release-wekids-group

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test and build
        run: ./gradlew clean build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_RELEASE_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_RELEASE_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: wekids-ecr
          IMAGE_TAG: latest
        run: |
          docker build \
            --build-arg RDS_ENDPOINT="${{ secrets.RDS_ENDPOINT }}" \
            --build-arg RDS_USERNAME="${{ secrets.RDS_USERNAME }}" \
            --build-arg RDS_PASSWORD="${{ secrets.RDS_PASSWORD }}" \
            --build-arg JWT_KEY="${{ secrets.JWT_KEY }}" \
            --build-arg NAVER_CLIENT_ID="${{ secrets.NAVER_CLIENT_ID }}" \
            --build-arg NAVER_CLIENT_SECRET="${{ secrets.NAVER_CLIENT_SECRET }}" \
            --build-arg NAVER_REDIRECT_URI="${{ secrets.NAVER_REDIRECT_URI }}" \
            --build-arg S3_KEY="${{ secrets.S3_KEY }}" \
            --build-arg S3_SECRET_KEY="${{ secrets.S3_SECRET_KEY }}" \
            --build-arg S3_URL="${{ secrets.S3_URL }}" \
            --build-arg BAAS_URL="${{ secrets.BAAS_URL }}" \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


      - name: Upload to S3
        run: |
          zip -r ./$GITHUB_SHA.zip ./scripts appspec.yml docker-compose.yml .env
          aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME

      - name: Deploy to EC2 with CodeDeploy
        run: |
          aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip